3.5.4
    - BrainBox:
        - Windows compatibility
        - Small bugfixes
        - Cancel buttons now work
        - OpenVoice, Piper works (suboptimally), Resemble-Enhance is still in progress

3.5.3
    - Brainbox: WD14, Espeak deciders, piper, openvoice prototypes
    - Small bug fixes in Brainbox + 1 big: BrainBox can now run inside container itself
3.5.2
    - Fixed bug with BrainBox not working on the machine without GPU
    - Fixed bud with downloadable models which didn't work
    - Self-test now contains the source code of the test
    - Fixed bug with some deciders unable to download models

3.5.1
    - BrainBox polished: containerized version now works with local user, unsuccessful installation raises
    - Restarts of kaia client and servers are correctly processed
    - AvatarAPI put to kaia context to simplify access
3.5.0
    - Big update
    - brainbox and eaglesong are separated into stand-alone folders and will at some point become standalone projects
    - kaia is switched to the new communication architecture completely, tests are improved, the coverage increased
    - old projects, `zoo`, `kaia.bro` and `kaia.ml` are removed to focus on things that are the essence of the project. Some will be restored.
3.4.1
    - New architecture, compatible with sound processing in the browser, is introduced
3.4.0
    - ComfyUI, Ollama, KohyaSS, WD14Tagger are completed; Rhasspy, Oobabooga and Automatic1111 are moved to Legacy
    - Free templates with PredefinedBindings are simplified; more logic is moved to objects instead of bindings.
    - To generate Prompts, Ontologies can now be used that define grids of parameters and allow bulding prompts on top of that
3.3.1.
    - Test server for the new protocol is now dockerized
3.3.0.
    - ComfiUI decider is added to Brainbox, with TextToImage, Upscale and WD14Tagger workflows
    - WD14Tagger is added to Brainbox
    - Upscale endpoint is added to Automatic1111
    - Small refactoring in Brainbox
    - LoRA training recipe components
3.2.0.
    - Avatar Service is significantly refactored:
        - There is no narrator anymore. Avatar holds the State. If there is a need of story, the state must be modified by the external service
        - Avatar keeps track of its procedures
        - NLU is now completely on the Avatar side. Avatar thus incapsulates all BrainBox calls in the app
    - RhasspyKaldi NLU is recognized: now we can have several Kaldi models, e.g. one model per complex skill
    - Input preprocessing is modified: Listen can now store various additional attributes, and PartialListenTranslators modify the stack's behaviour accordingly


3.1.0.
    - A draft for new bus-based backend and frontend
3.0.0.
    - Brainbox is refactored to self-testing docker-based containers. `Deployment` is now part of Brainbox
    - Dubs are moved to repo's root. Templates syntaxis is greatly improved, metadata for paraphrasees are added
    - Eaglesong uses IAssert in Scenarios for better assertion
    - Avatar supports paraphrases, image handling is refactored to MediaLibraryManager
    - Narration library is added, with the aim to content creation. Paraphrases are supported
    - AudioControl is greatly streamlined, all the processing logic is moved downstream
    - Skills are now supporting paraphrases
    - Kaia's demo is moved from `my` to `demos/kaia`. `my` folder is now empty

2.1.1.
    - Dubs parsing is improved
    - Executors require command in array format for linux-compatibility
    - Chat is Kaia GUI is now scrollable, not selectable
    - Traffic between browser and Kaia GUI is optimized
2.1.0.
    - New deciders in Brainbox, also new architecture of the deciders, based on Docker
    - Brainbox's performance is optimized for the case with lots of tasks
    - Rhasspy is now used only as NLU unit. Voice input is done by kaia.kaia.audio_control
    - ML recepy on voice cloning is ready
    - Demo that runs on the PC under Windows and Linux is available
    - "Good image" added to ChangeImage skill.
    - Initialization of assistant is redesigned as a wrap around KaiaAssistant, eliminating some rare-occuring problems
    - Initialization of KaiaCoreService is streamlined
2.0.0
    - First fully working version
    - persona -> avatar, simplified
    - brainbox is roughly finalized, few new deciders
    - kaia is introduced, contains everything required for voice assistant
    - no changes in bro, eaglesong
1.0.0
    - eaglesong refactored with better input management (`input = yield Listen()` instead of yield Listen(); input = context.input`)
    - BrainBox, a web-server-decorator for different models, is introduced
    - Automatic1111 tryouts are now the part of BrainBox
    - persona module is introduced, currently contains everything required for voiceovers
0.4.2
    - Full-fledged testing for telegram skills
    - Group control bot is refactored to Eaglesong, unit tests added
0.4.1
    - More skills for group control, also those are prettified and can now be used as examples
0.4.0
    - Chatbot to control telegram with 2 skills: autorestriction and whois
    - kaia.app is simplified, storage and messenger is no longer a part of config and must be provided to services separately
0.3.0
    - bro module for smart home controlling
0.2.0
    - fix error in infra tests
    - demos on images: how to create character
0.1.0
    - layer of chatflow logic abstracted from telegram
    - chat driver for IPython notebooks
    - lots of cleanup
    - narrator protorype
    - complete set of examples with documentation
0.0.3
    - TelegramBridge refactoring: the main loop that handles automata moved to Interpreters
0.0.2
   - tests moved to kaia_tests
   - upgraded SqlMessenger, message can have many tags
   - kaia.infra.tasks with a bridge to huge async tasks
0.0.1
  - tests for Storage don't trigger warnings
  - Subroutine.return_value -> returned_value(), better handling of returning one value
  - Menu skill demo
0.0.0
  - Very first version
